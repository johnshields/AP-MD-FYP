---
openapi: 3.0.2
info:
  title: Repota-Horton-API
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /login:
    post:
      tags:
        - Account
      summary: Log in
      description: Attempts to log a user in
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
      responses:
        "204":
          description: Login successful
          headers:
            Set-Cookie:
              description: Returns a new session_id to be used for all future requests
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: Login Unsuccessful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                LoginFailed:
                  value:
                    code: 403
                    messages: Invalid Name and/or password
        "500":
          description: Unable to process request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
      security:
        - { }
  /register:
    summary: Path used to register a new User
    post:
      tags:
        - Account
      summary: Registers User
      description: Attempts to register a new user
      operationId: register
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
      responses:
        "204":
          description: Successfuly registered a new User
        "400":
          description: Problem with username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InvalidNameOrPassword:
                  value:
                    code: 400
                    messages: Password insufficiently complex
                NameTooShort:
                  value:
                    code: 400
                    messages: Name too short
        "409":
          description: Name is taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                NameTaken:
                  value:
                    code: 409
                    messages: NameTaken
        "500":
          description: Unable to process request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
      security:
        - { }
  /jobReports:
    summary: Path used to manage the list of reports.
    description: Get all reports for logged in worker.
    get:
      tags:
        - Job Report
      summary: Get all reports for logged in worker
      description: Get all reports for the worker logged in.
      operationId: get_reports
      responses:
        "200":
          description: Successful response - returns an array of Job Report entities.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobReport'
        "500":
          description: Unable to retrieve reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to retrieve reports
      security:
        - LoginRequired: [ ]
    post:
      tags:
        - Job Report
      summary: Create a report
      description: Creates a new instance of a Job Report.
      operationId: create_report
      requestBody:
        description: A new report to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobReport'
        required: true
      responses:
        "201":
          description: Successful response.
        "500":
          description: Unable to create a new job report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to create a new report
      security:
        - LoginRequired: [ ]
  /jobReports/{jobReportId}:
    get:
      tags:
        - Job Report
      summary: Get a job report
      description: Gets the details of a single instance of a report.
      operationId: get_report_by_id
      parameters:
        - name: jobReportId
          in: path
          description: A unique identifier for a report.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful response - returns a single job report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReport'
        "404":
          description: Could not locate Report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ReportNotFound:
                  value:
                    code: 404
                    messages: Report not found
        "500":
          description: Unable to process request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
      security:
        - LoginRequired: [ ]
    put:
      tags:
        - Job Report
      summary: Update a job report
      description: Updates an existing job report.
      operationId: update_report
      parameters:
        - name: jobReportId
          in: path
          description: A unique identifier for a report.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Updated report information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobReport'
        required: true
      responses:
        "204":
          description: Job report has been updated.
        "404":
          description: Could not locate job report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ReportNotFound:
                  value:
                    code: 404
                    messages: Job report not found
        "500":
          description: Unable to process request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
      security:
        - LoginRequired: [ ]
    delete:
      tags:
        - Job Report
      summary: Delete a Job Report
      description: Deletes an existing report.
      operationId: delete_report
      parameters:
        - name: jobReportId
          in: path
          description: A unique identifier for a Report.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "204":
          description: Successful response.
        "404":
          description: Could not locate Report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ReportNotFound:
                  value:
                    code: 404
                    messages: Report not found
        "500":
          description: Unable to process request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  value:
                    code: 500
                    messages: Unable to process request
      security:
        - LoginRequired: [ ]
components:
  schemas:
    inline_object:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: John Doe
        password: password
    Error:
      required:
        - code
        - messages
      type: object
      properties:
        code:
          type: integer
        messages:
          type: string
    JobReport:
      type: object
      properties:
        jobReportId:
          type: integer
        date:
          type: string
        vehicleModel:
          type: string
        vehicleReg:
          type: string
        milesOnVehicle:
          type: integer
        vehicleLocation:
          type: string
        warranty:
          type: string
        breakdown:
          type: string
        customerName:
          type: string
        customerComplaint:
          type: string
        cause:
          type: string
        correction:
          type: string
        parts:
          type: string
        workHours:
          type: integer
        workerName:
          type: string
        jobComplete:
          type: string
      example:
        jobReportId: 14
        date: 06/01/2019
        vehicleModel: Peugeot Spinner
        vehicleReg: 191-LA-2049
        milesOnVehicle: 1337
        vehicleLocation: Drogheda
        warranty: true
        breakdown: true
        customerName: Kyle
        customerComplaint: Door hangle broken
        cause: Door lock out of place
        correction: Door lock has fixed
        parts: 0
        workHours: 1
        workerName: Rick Deckard
        jobComplete: true
  responses:
    ReportNotFound:
      description: Could not locate job report
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ChannelNotFound:
              value:
                code: 404
                messages: Report not found
    InternalServerIssue:
      description: Unable to create user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ChannelNotFound:
              value:
                code: 500
                messages: Unable to process request
  requestBodies:
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  securitySchemes:
    LoginRequired:
      type: apiKey
      name: session_id
      in: cookie
